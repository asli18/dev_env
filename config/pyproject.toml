[project]
name = "ddr-configurator"
version = "0.1.0"
requires-python = ">=3.13"
dependencies = [
    "attr>=0.3.2",
    "attrs>=25.3.0",
    "coverage>=7.10.5",
    "fonttools>=4.59.1",
    "imageio>=2.37.0",
    "kiwisolver>=1.4.10rc0",
    "matplotlib>=3.10.5",
    "mypy>=1.17.1",
    "nuitka>=2.7.13",
    "numpy>=2.3.2",
    "openpyxl>=3.2.0b1",
    "optype>=0.13.4",
    "pandas>=2.3.2",
    "pandas-stubs>=2.3.0.250703",
    "pefile>=2023.2.7",
    "pluggy>=1.6.0",
    "pre-commit>=4.3.0",
    "psutil>=7.0.0",
    "pydantic>=2.11.7",
    "pyinstaller>=6.15.0",
    "pyinstaller-hooks-contrib>=2025.5",
    "pympler>=1.1",
    "pyside6>=6.9.2",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "pytest-qt>=4.5.0",
    "pytest-repeat>=0.9.4",
    "python-levenshtein>=0.27.1",
    "pywin32>=311 ; sys_platform == 'win32'",
    "rapidfuzz>=3.13.0",
    "reportlab>=4.4.3",
    "ruff>=0.12.12",
    "scipy>=1.16.1",
    "scipy-stubs>=1.16.0.0",
    "setuptools>=80.9.0",
    "types-pytz>=2025.2.0.20250809",
    "types-pywin32>=311.0.0.20250822",
    "types-reportlab>=4.4.1.20250822",
    "typing-extensions>=4.15.0",
    "zstandard>=0.24.0",
]

[tool.mypy]
plugins = ['pydantic.mypy']
disallow_incomplete_defs = true
check_untyped_defs = true

# Ruff configuration
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "ddr_configurator/interface/PPCOM.py",
    "ddr_configurator/ui_elements",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py313"

[tool.ruff.lint]
# Enable Pyflakes (`F`), pycodestyle errors (`E`), pycodestyle warnings (`W`),
# isort (`I`), flake8-comprehensions (`C`), flake8-bugbear (`B`), and pyupgrade (`UP`) rules.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]

# Ignore specific rules.
ignore = [
    "B008",  # Do not perform function calls in argument defaults
    "C901",  # Too complex (McCabe complexity)
]

# Allow fixing for all enabled rules when `--fix` is provided.
fixable = ["ALL"]
# Never try to autofix `F401` (unused imports).
unfixable = ["F401"]

# Allow unused variables when they are underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
# This is currently disabled by default, but it is planned to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in docstrings.
# This only takes effect when `docstring-code-format` is enabled.
docstring-code-line-length = "dynamic"

# Ignore `E402` (import violations) in all `__init__.py` files and a specific file `path/to/file.py`.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"path/to/file.py" = ["E402"]
